{"version":3,"sources":["components/Filter/filter.module.css","components/ContactForm/form.module.css","components/ContactForm/contactForm.js","components/ContactList/contactList.js","components/Filter/filter.js","App.js","reportWebVitals.js","index.js","components/ContactList/contactList.module.css"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","contactNameId","shortid","generate","contactNumberId","handleChange","e","currentTarget","value","reset","className","s","form","preventDefault","label","htmlFor","input","type","onChange","id","button","ContactList","contacts","onDeleteContact","list","map","listItem","listItemText","onClick","Filter","filterLabel","filterInput","App","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","find","contact","alert","newContact","prevContacts","target","normalizedFilter","toLowerCase","includes","getVisibleContacts","contactId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e598de9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"filter_filterLabel__1hYoT\",\"filterInput\":\"filter_filterInput__KcP-x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__20PdV\",\"label\":\"form_label__1bLMQ\",\"input\":\"form_input__egnIr\",\"button\":\"form_button__rbi6y\"};","import { useState } from 'react';\nimport shortid from 'shortid';\nimport s from './form.module.css';\n\nexport default function ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contactNameId = () => shortid.generate();\n  const contactNumberId = () => shortid.generate();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label} htmlFor={contactNameId}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          id={contactNameId}\n        />\n      </label>\n      <label className={s.label} htmlFor={contactNumberId}>\n        Number\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          id={contactNumberId}\n        />\n      </label>\n\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './contactList.module.css';\n\nexport default function ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.listItem} key={id}>\n          <span className={s.listItemText}>{name}:</span>\n          <span className={s.listItemText}>{number}</span>\n          <button\n            className={s.button}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.filterLabel}>\n    Find contacts by name\n    <input\n      className={s.filterInput}\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { useState, useEffect } from 'react';\nimport shortid from 'shortid';\n\nimport ContactForm from './components/ContactForm/contactForm';\nimport ContactList from './components/ContactList/contactList';\nimport Filter from './components/Filter/filter';\nimport './app.css';\n\n// const initialContacts = [\n//       { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//       { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//       { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//       { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//     ]\n\nexport default function App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem('contacts')) ?? [];\n  });\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (name, number) => {\n    if (name === '') {\n      alert(`Введите, пожалуйста, имя контакта.`);\n      return;\n    }\n\n    if (number === '') {\n      alert(`Введите, пожалуйста, номер телефона контакта.`);\n      return;\n    }\n\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    setContacts(prevContacts => [newContact, ...prevContacts]);\n  };\n\n  const changeFilter = ({ target }) => {\n    setFilter(target.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList\n        contacts={getVisibleContacts()}\n        onDeleteContact={deleteContact}\n      />\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contactList_list__30VP1\",\"listItem\":\"contactList_listItem__3TdBf\",\"listItemText\":\"contactList_listItemText__3wcxP\",\"button\":\"contactList_button__18MOL\"};"],"sourceRoot":""}